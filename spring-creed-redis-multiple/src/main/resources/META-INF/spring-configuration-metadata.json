{
  "hints": [
    {
      "name": "multi.redis",
      "values": [
        {
          "value": "redisMain"
        }
      ]
    }
  ],
  "groups": [
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multiple multi-properties",
      "type": "com.ethan.redis.multiple.FastMultipleRedisProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.database",
      "type": "java.lang.Integer",
      "defaultValue": 0
    },
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.url",
      "type": "java.lang.String",
      "defaultValue": "redis://user:password@example.com:6379"
    },
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.host",
      "type": "java.lang.String",
      "defaultValue": "localhost"
    },
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.password",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.port",
      "type": "java.lang.Integer",
      "defaultValue": 6379
    },
    {
      "sourceType": "com.ethan.redis.multiple.FastMultipleRedisProperties",
      "name": "multi.redis.*.ssl",
      "type": "java.lang.Boolean",
      "defaultValue": false
    },
    {
      "name": "multi.redis.*.timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
    },

    {
      "name": "multi.redis.*.sentinel",
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
      "sourceMethod": "getSentinel()"
    },
    {
      "name": "multi.redis.*.sentinel.master",
      "type": "java.lang.String",
      "description": "Name of the Redis server.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
    },
    {
      "name": "multi.redis.*.sentinel.nodes",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of \"host:port\" pairs.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
    },
    {
      "name": "multi.redis.*.cluster",
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
      "sourceMethod": "getCluster()"
    },
    {
      "name": "multi.redis.*.cluster.max-redirects",
      "type": "java.lang.Integer",
      "description": "Maximum number of redirects to follow when executing commands across the cluster.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
    },
    {
      "name": "multi.redis.*.cluster.nodes",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of \"host:port\" pairs to bootstrap from. This represents an \"initial\" list of cluster nodes and is required to have at least one entry.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
    },

    {
      "name": "multi.redis.*.lettuce",
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
      "sourceMethod": "getLettuce()"
    },
    {
      "name": "multi.redis.*.lettuce.pool",
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
      "sourceMethod": "getPool()"
    },
    {
      "name": "multi.redis.*.lettuce.pool.max-active",
      "type": "java.lang.Integer",
      "description": "Maximum number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "defaultValue": 8
    },
    {
      "name": "multi.redis.*.lettuce.pool.max-idle",
      "type": "java.lang.Integer",
      "description": "Maximum number of \"idle\" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "defaultValue": 8
    },
    {
      "name": "multi.redis.*.lettuce.pool.max-wait",
      "type": "java.time.Duration",
      "description": "Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "defaultValue": "-1ms"
    },
    {
      "name": "multi.redis.*.lettuce.pool.min-idle",
      "type": "java.lang.Integer",
      "description": "Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if both it and time between eviction runs are positive.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "defaultValue": 0
    },
    {
      "name": "multi.redis.*.lettuce.pool.time-between-eviction-runs",
      "type": "java.time.Duration",
      "description": "Time between runs of the idle object evictor thread. When positive, the idle object evictor thread starts, otherwise no idle object eviction is performed.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
    },
    {
      "name": "multi.redis.*.lettuce.shutdown-timeout",
      "type": "java.time.Duration",
      "description": "Shutdown timeout.",
      "sourceType": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
      "defaultValue": "100ms"
    }
  ]
}